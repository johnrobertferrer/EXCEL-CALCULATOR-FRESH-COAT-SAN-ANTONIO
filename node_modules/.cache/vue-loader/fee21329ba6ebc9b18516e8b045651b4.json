{"remainingRequest":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\src\\components\\CustomInput.vue?vue&type=style&index=0&id=051ef74e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\src\\components\\CustomInput.vue","mtime":1580305188841},{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\JR Ferrer\\Documents\\EXCEL-CALCULATOR-FRESH-COAT-SAN-ANTONIO\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXQgewogICAgd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["CustomInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA","file":"CustomInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <b-form-input type=\"text\" class=\"input\" v-model=\"displayValue\" @blur=\"isInputActive = false\" @focus=\"isInputActive = true\" :disabled=\"disabled\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'CustomInput',\r\n\r\n    props: [\"value\", 'disabled'],\r\n\r\n    data() {\r\n        return {\r\n            isInputActive: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        // \r\n    },\r\n\r\n    computed: {\r\n        displayValue: {\r\n            get: function() {\r\n                if (this.isInputActive) {\r\n                    // Cursor is inside the input field. unformat display value for user\r\n                    return this.value.toString()\r\n                } else {\r\n                    // User is not modifying now. Format display value for user interface\r\n                    return \"$ \" + this.value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\r\n                }\r\n            },\r\n            set: function(modifiedValue) {\r\n                // Recalculate value after ignoring \"$\" and \",\" in user input\r\n                let newValue = parseFloat(modifiedValue.replace(/[^\\d\\.]/g, \"\")) // eslint-disable-line\r\n                // Ensure that it is not NaN\r\n                if (isNaN(newValue)) {\r\n                    newValue = 0\r\n                }\r\n                // Note: we cannot set this.value as it is a \"prop\". It needs to be passed to parent component\r\n                // $emit the event so that parent component gets it\r\n                this.$emit('input', newValue)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    input {\r\n        width: 100%;\r\n    }\r\n</style>"]}]}